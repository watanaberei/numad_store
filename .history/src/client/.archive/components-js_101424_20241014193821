import * as glyph from '../icon/glyph.js';
import * as style from '../style/style.js';
import * as icon from '../icon/icon.js';
import * as pictogram from '../icon/pictogram.js';
import * as Tag from '../tags/tag.js';
import * as geotag from  '../tags/geotag.js';
import * as objtag from '../tags/objtag.js';
import * as amtag from '../tags/amtag.js';
import * as attrtag from '../tags/attrtag.js';
import { getStatsScore } from '../function/functionScore.js';
import { initMap } from '../map/map.js';


export const sectionFooter = {
  render: (data) => {
    const user = icon.iconUserRating;
    const comment = icon.iconUserComment;
    const review = icon.iconUserReview;
    const like = icon.iconUserImpressionsLike;
    const dislike = icon.iconUserImpressionsDislike;
    return `
      <!--<div class="footer-item grid05 col04">-->
        <div class="info sentance alignV-center text02 col02">
          <span class="impression-item text02 glyph">
            ${user}
            <span class="count">
              ${data.contributionsCount}
            </span>
          </span>
          <div class="dividerV"></div>
          <div class="sentance">
            Modified ${data.modifiedDate}, ${data.modifiedTime} min
          </div>
        </div>
        <div class="controls col02 array alignV-center alignH-right">
          <span class="impression-item text02 glyph">
            
            ${comment}
            Comments 
            <span class="count">
              ${data.commentsCount}
            </span>
          </span>
          <span class="impression-item text02 glyph">
            ${review}
            Reviews 
            <span class="count">
              ${data.reviewsCount}
            </span>
          </span>
          <div class="divider"></div>
          <div class="impressions pair">
            <span class="impression-item text02 glyph">
              ${like}
              ${data.likesCount}
            </span>
            <span class="impression-item text02 glyph">
              
              ${dislike}
              ${data.dislikesCount}
            </span>
          </div>
        </div>
        <!--</div>-->
    `;
  }
};

export const cardSubStoreItem = {
  render: (data) => {
    return `
      <div class="card-sub-store col01">
        <div class="content">
          <div class="text array">
            <i class="icon"></i>
            <span class="distance">
              <span class="count">
                <span class="text02">
                  ${data.distance}
                </span>
              </span>
              <span class="unit">
                <span class="miles">
                  mi
                </span>
              </span>
            </span>
          </div>

          <div class="logo">
            <img src="background-image: url(${data.imageUrl});" class="substore-logo"></img>
          </div>
          
          <div class="label">
            <span class="brand text02">
              <span class="label">
                ${data.storeName}
              </span>
            </span>
          </div>
        </div>
      </div>
    </div>
    `;
  }
};

export const storeDetail = {
  render: (data) => {
    let rating = {
      rating: data.rating,
    };
    let costEstimate = {
      priceRange: data.costEstimate,
    };

  
    
    const save = glyph.glyphControlSave;
    const share = glyph.glyphControlShare;
    const checkin = glyph.glyphControlCheckin;
    return `
        <div class="hero-details array alignV-center col04">
          <div class="hero-primary">
            ${geotag.geotagRating.render(rating)}
            ${geotag.geotagCostEstimate.render(costEstimate)}             
          </div>
          <div class="hero-secondary">
            <span class="info-type text02">${data.storeType}</span>
            <span class="info-distance text02">${data.distance} away in</span>
            <span class="info-city text02">${data.city}, ${data.state}</span>
          </div>
        </div>
        <div class="hero-controls array col01">
          <button class="user-action share">
            ${share}
            <span class="text02">Share</span>
          </button>
          <button class="user-action save">
            ${save}
            <span class="text02">Save</span>
          </button>
          <button class="user-action checkin">
            ${checkin}
            <span class="text02">Check in</span>
          </button>
        </div>
        
    `;
  }
};

export const heroGallery = {
  render: (data) => {
    return `
      
        
        <div class="hero-gallery00 grid05-overflow">
          <div class="gallery-image col03" style="background-image: url(${data.galleryImages[0]});"></div>
          <div class="gallery-image col02" style="background-image: url(${data.galleryImages[1]});"></div>
          <div class="gallery-image col03" style="background-image: url(${data.galleryImages[0]});"></div>
          <div class="gallery-image col02" style="background-image: url(${data.galleryImages[1]});"></div>
        </div>

    `;
  }
};

export const storeHeadline = {
  render: (data) => {
    const pin = glyph.glyphLocationPin;
    let status = {
      status: data.status,
    };
    return `
      
        <span class="hero-title array col04">
          <span class="store-name text05">${data.storeName}</span>
          <span class="store-city text05">${data.city}</span>
        </span>
        <div class="hero-distance array col01">
          <span class="glyph05 glyph-location-pin">${pin}</span>
          <span class="distance-value text05">${data.distanceMiles}</span>
          <span class="distance-unit text05">mi</span>
        </div>
        ${geotag.geotagStatus.render(status)}   


    `;
  }
};

  export const itemTag = {
    render: (data) => {
      const arrow = glyph.glyphActionArrow;
      return `
      <div class="item-tag">
        <div class="label">
          ${arrow}
          <span class="text02">${data.label}</span>
        </div>
      </div>
    
      `;
  }
};

export const cardCategoryItem = {
  render: (data) => {
    return `
      <div class="card-collection col01">
        <div class="content">
          <div class="primary">
            <div id="pill" class="pill">
              ${glyph.glyphAmenitiesGrocery}
              <span class="pill-text label">${data.label}</span>
              
              <svg width="6" height="9" viewBox="0 0 6 9" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M1 0.5L5 4.5L1 8.5" stroke="#F2F4F5" stroke-width="1.5"></path>
              </svg>
            </div>
          </div>
          <div class="tertiary">
            <div class="indicator">
              <div class="indicator-dot"></div>
              <div class="indicator-dot inactive"></div>
              <div class="indicator-dot inactive"></div>
            </div>
          </div>
          <div class="secondary">
            <div id="value" class="value pill array">
              <div class=" objtag ">
                <div class="rank">
                  <i class="glyph glyph-pound"></i>
                  <div class="count label">${data.rank}</div>
                </div>
                <span class="pill-text label">${data.itemName}</span>
                <span class="count label">${data.itemCount}</span>
                <svg width="6" height="9" viewBox="0 0 6 9" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M1 0.5L5 4.5L1 8.5" stroke="#F2F4F5" stroke-width="1.5"></path>
                </svg>
              </div>
            </div>
          </div>
        </div>
      </div>
    `;
  }
};

  // function getStatsScore(score) {
  //   // const stats = document.createElement('div');
  //   const iconScoreFull = icon.iconScoreFull;
  //     const iconScoreHalf = icon.iconScoreHalf;
  //     const iconScoreNone = icon.iconScoreNone; 
  //   // stats.classList.add('status');
  //   if (score == 0) {
  //     return iconScoreNone;
  //   } else if (score == 1) {
  //     return iconScoreHalf;
  //   } else if (score == 2) {
  //     return iconScoreFull;
  //   } else {
  //     return iconScoreNone;
  //   }
  // }



  
  // ... (other imports and components)
  
export const cardSummaryItem = {
  render: (data) => {
    const tags = data.tags || [];
    
    return `
      <div class="card-summary col01">
        <div class="title anchor">
          <span class="primary sentance">
            <span class="text03">
              <span class="experience">${data.title}</span>
            </span>
            <span class="status">
              <span class="status-text text02">${data.status}</span>
              ${data.statusIcon}
            </span>
          </span>
          <div class="secondary action">
            <i class="icon-action-popup">
              ${icon.iconActionPopup}
            </i>
          </div>
        </div>
        <div class="tag-array">
          <div class="array">
            ${data.tags.map(tag => {
              const scoreResult = getStatsScore(tag.score);
              return `
                <button class="amtag" id="amtag" data-name="value" data-score="${tag.score}">
                  <div class="single-icon">
                    ${scoreResult.icons[scoreResult.currentScore].icon}
                  </div>
                  <div class="score-icons">
                    ${scoreResult.icons.map((icon, index) => `
                      <span class="score-icon ${index === scoreResult.currentScore ? 'active' : ''}" data-score="${index}" title="${icon.tooltip}">
                        ${icon.icon}
                      </span>
                    `).join('')}
                  </div>
                  <div class="label">
                    <span class="text02" id="text02">${tag.label}</span>
                  </div>
                </button>    
              `;
            }).join('')}
          </div>
          ${data.moreTags ? `
            <button class="button-more">
              ${glyph.glyphSymbolPlus}
              <span class="text02" id="count">
                ${data.moreTags}
              </span>
              <span class="text02">
                more
              </span>
            </button>
          ` : ''}
        </div>
      </div>
    `;
  },
  
  afterRender: () => {
    const amtagButtons = document.querySelectorAll('.amtag');
    amtagButtons.forEach(button => {
      button.addEventListener('mouseenter', (e) => {
        button.classList.add('hovered');
      });
      button.addEventListener('mouseleave', (e) => {
        button.classList.remove('hovered');
      });
      
      const scoreIcons = button.querySelectorAll('.score-icon');
      scoreIcons.forEach(icon => {
        icon.addEventListener('click', (e) => {
          e.stopPropagation();
          const newScore = parseInt(icon.getAttribute('data-score'));
          button.setAttribute('data-score', newScore);
          scoreIcons.forEach((si, index) => {
            si.classList.toggle('active', index <= newScore);
          });
          button.classList.add('selected');
          button.querySelector('.single-icon').innerHTML = icon.innerHTML;
        });
      });
    });
  }
};

  // export const summaryCard = {
  //   render: (data) => {
  //     const tags = data.tags || [];
      
  //     return `
  //       <div class="card-summary col01">
  //         <div class="title anchor">
  //           <span class="primary sentance">
  //             <span class="text03">
  //               <span class="experience">${data.title}</span>
  //             </span>
  //             <span class="status">
  //               <span class="status-text text02">${data.status}</span>
  //               ${data.statusIcon}
  //             </span>
  //           </span>
  //           <div class="secondary action">
  //             <i class="icon-action-popup">
  //               ${icon.iconActionPopup}
  //             </i>
  //           </div>
  //         </div>
  //         <div class="tag-array">
  //           <div class="array">
  //             ${data.tags.map(tag => {
  //               const scoreResult = getStatsScore(tag.score);
  //               return `
  //                 <button class="amtag" id="amtag" data-name="value" data-tooltip="${scoreResult.tooltip}" title="${scoreResult.tooltip}">
  //                   ${scoreResult.icon}
  //                   <div class="label">
  //                     <span class="text" id="text02">${tag.label}</span>
  //                   </div>
  //                 </button>    
  //               `;
  //             }).join('')}
  //           </div>
  //           ${data.moreTags ? `
  //             <button class="button-more">
  //               ${glyph.glyphSymbolPlus}
  //               <span class="text02" id="count">
  //                 ${data.moreTags}
  //               </span>
  //               <span class="text02">
  //                 more
  //               </span>
  //             </button>
  //           ` : ''}
  //         </div>
  //       </div>
  //     `;
  //   },
    
  //   afterRender: () => {
  //     const amtagButtons = document.querySelectorAll('.amtag');
  //     amtagButtons.forEach(button => {
  //       button.addEventListener('mouseenter', (e) => {
  //         // Show tooltip
  //         const tooltip = button.getAttribute('data-tooltip');
  //         // You can implement custom tooltip display logic here
  //       });
  //       button.addEventListener('mouseleave', (e) => {
  //         // Hide tooltip
  //       });
  //       button.addEventListener('click', (e) => {
  //         // Toggle selected state
  //         button.classList.toggle('selected');
  //       });
  //     });
  //   }
  // };
  



  // export const summaryCard = {
  //   render: (data) => {
  //     const tags = data.tags || [];
      
      
  //     const score = tags.score;
  //     console.log(tags);
  //     function getStatsScore(score) {
  //       // const stats = document.createElement('div');
  //       const iconScoreFull = icon.iconScoreFull;
  //         const iconScoreHalf = icon.iconScoreHalf;
  //         const iconScoreNone = icon.iconScoreNone; 
  //       // stats.classList.add('status');
  //       if (score == 0) {
  //         return iconScoreNone;
  //       } else if (score == 1) {
  //         return iconScoreHalf;
  //       } else if (score == 2) {
  //         return iconScoreFull;
  //       } else {
  //         return iconScoreNone;
  //       }
  //     }
  //     return `
  //       <div class="card-summary col01">
  //         <div class="title anchor">
  //           <span class="primary sentance">
  //             <span class="text03">
  //               <span class="experience">${data.title}</span>
  //             </span>
  //             <span class="status">
  //               <span class="status-text text02">${data.status}</span>
  //               ${data.statusIcon}
  //             </span>
  //           </span>
  //           <div class="secondary action">
  //             <i class="icon-action-popup">
  //               ${icon.iconActionPopup}
  //             </i>
  //           </div>
  //         </div>
  //         <div class="tag-array ">
  //           <div class="array">
              
  //             ${data.tags.map(tag => `
              
  //             <button class="amtag" id="amtag" data-name="value">
  //                 ${getStatsScore(tag.score)}
  //                 <div class="label">
  //                     <span class="text" id="text02">${tag.label}</span>
  //                 </div>
  //             </button>    
  //             `).join('')}
  //             ${data.moreTags ? `
  //               <div class="button-more">
  //                 <div class="text-underline text02">
  //                   <div class="count">
  //                     ${data.moreTagsIcon}
  //                     <div class="more-text">${data.moreTags}</div>
  //                   </div>
  //                   <div class="more-text">more</div>
  //                 </div>
  //               </div>
  //             ` : ''}
  //           </div>

  //           <button class="button-more">
  //             ${glyph.glyphSymbolPlus}
  //             <span class="text02" id="count">
  //               3
  //             </span>
  //             <span class="text02">
  //               more
  //             </span>
  //           </button>
  //         </div>
  //       </div>
  //     `;
  //   }
  // };
  

export const textBlock = {
  render: (data) => {
    return `
      <div class="text-component col04">
        <div class="title">
          <div class="title-text text02">Summary</div>
          ${icon.iconMenuMore}
        </div>
        <div id="text-reveal" class="body-content text02">${data.content}</div>
        <button id="button-reveal" class="button-more reveal show-more text02">Show More</button>
      </div>
    `;
  },

  afterRender: () => {
    // Ensure that this function runs after the DOM is fully loaded
    window.onload = () => {
      const showMoreBtn = document.querySelector('#button-reveal');
      const content = document.querySelector('#text-reveal');
      
      if (showMoreBtn && content) {
        let isExpanded = false;

        showMoreBtn.addEventListener('click', () => {
          if (isExpanded) {
            console.log('isClicked');
            content.style.webkitLineClamp = '3';
            showMoreBtn.textContent = 'Show More';
          } else {
            content.style.webkitLineClamp = 'unset';
            showMoreBtn.textContent = 'Show Less';
          }
          isExpanded = !isExpanded;
        });
      }
    };
  }
};


export const cardAttributes = {
  render: store => {
    // Helper function to capitalize the first letter of object key and prepend with 'pictogram'
    function getPictogramClass(objectKey) {
      return `pictogram.pictogram${objectKey.charAt(0).toUpperCase() +
        objectKey.slice(1)}`;
    }

    // Example of handling card section rendering
    function renderCardSection(section, title, objectKey) {
      const pictogramClass = getPictogramClass(objectKey); // Dynamically get the class name

      return `
            <div class="card-attributes col02">
              <div class="title">
                  <div class="text">
                      <span class="text03">${title}</span>
                      <div class="${pictogramClass}"></div>  <!-- Dynamically apply pictogram class -->
                  </div>
              </div>
              <div class="tag-array">
                  ${section
                    .map(
                      tag => {
                        let data = {
                          attribute: tag.label,
                          count: tag.count,
                        }
                        return`
                  <div class="pill">
                    <button class="attr-tag">
                      <div class="label">
                        
                      ${attrtag.attrtag.render(data)}
                      <div class="tag-attributes">
                          <span class="label">${tag.label}</span>
                          <span class="count">${tag.count}</span>
                      </div>
                      
</div>
                    </button>
                  </div>
                  `
                   } )
                    .join("")}
              </div>
              </div>
              `;
    }

    // Render all four sections dynamically
    return `
          <!-- <div class="card-attributes"> -->
              ${store.bestfor
                ? renderCardSection(store.bestfor, "Best For", "BestFor")
                : ""}
              ${store.working
                ? renderCardSection(store.working, "Working", "Working")
                : ""}
              ${store.environment
                ? renderCardSection(
                    store.environment,
                    "Environment",
                    "Environment"
                  )
                : ""}
              ${store.facility
                ? renderCardSection(store.facility, "Facility", "Facility")
                : ""}
         <!-- </div> -->
      `;
  }
};

// export const cardAttributesComponent = {
//     render: (store) => {
//         // Helper function to capitalize the first letter of object key and prepend with 'pictogram'
//         function getPictogramClass(objectKey) {
//             return `pictogram.pictogram${objectKey.charAt(0).toUpperCase() + objectKey.slice(1)}`;
//         }

//         // Example of handling card section rendering
//         function renderCardSection(section, title, objectKey) {
//           console.log('______',getPictogramClass(objectKey));
//             const pictogramClass = getPictogramClass(objectKey); // Dynamically get the class name
//             return `
//                 <div class="title">
//                     <div class="text">
//                         <span class="span">${title}</span>
//                         <div class="${pictogramClass}"></div>  <!-- Dynamically apply pictogram class -->
//                     </div>
//                 </div>
//                 <div class="tag-array">
//                     ${section.map(tag => `
//                         <div class="tag-attributes">
//                             <span class="label">${tag.label}</span>
//                             <span class="count">${tag.count}</span>
//                         </div>
//                     `).join('')}
//                 </div>`;
//         }

//         // Render all four sections dynamically
//         return `
//             <div class="card">
//                 ${store.recommended ? renderCardSection(store.recommended.tags, 'Best For', 'BestFor') : ''}
//                 ${store.work ? renderCardSection(store.work.tags, 'Working', 'Working') : ''}
//                 ${store.environment ? renderCardSection(store.environment.tags, 'Environment', 'Environment') : ''}
//                 ${store.facility ? renderCardSection(store.facility.tags, 'Facility', 'Facility') : ''}
//             </div>
//         `;
//     }
// };

// export const cardAttributesComponent = {
//   render: (data) => {
//     return `
//       <div class="highlight-item">
//         <div class="title">
//           <div class="text">
//             <span class="span">Best For</span>
//             ${data.pictogram}
//           </div>
//           ${icon.iconActionPopup}
//         </div>
//         <div class="tag-array">
//           ${data.tags.map(tag => `
//             <div class="tag-attributes">
//               <span class="label">${tag.label}</span>
//               <span class="count">${tag.count}</span>
//             </div>
//           `).join('')}
//           ${data.moreTags ? `
//             <div class="more">
//               <div class="text-underline">
//                 ${glyph.glyphSymbolPlus}
//                 ${data.moreTags} more
//               </div>
//             </div>
//           ` : ''}
//         </div>
//       </div>
//     `;
//   }
// };

export const mapNearby = {
  render: (data) => {
    return `


      <div class="location col04">
        <div class="map-container col04">
          <div id="map" class="map">
            <div class="overlay">
              <div class="search">
                <div class="text02">
                  $ {data.address}
                </div>
                ${icon.iconActionCopy}
              </div>
            </div>
          </div>
        </div>
        <div class="sidebar  col04">
          <div id="listings"class="listings grid8 span-4 row-1"></div>
        </div>
        </div>
    `;
  },
  afterRender: () => {
    initMap();  // Call the map initialization from map.js
  }
};

// Render the component on page load
document.addEventListener('DOMContentLoaded', () => {
  const mapContainer = document.getElementById('mapRadiusComponent');
  if (mapContainer) {
    mapContainer.innerHTML = mapRadiusComponent.render();
    mapRadiusComponent.afterRender();
  }
});
// });
// export const mapRadiusComponent = {
//   render: (data) => {
//     return `
    
//       <div class="location col04">
//         <div class="map-container">
//         <div id="map" class="map">
//           <div class="overlay">
//             <div class="search">
//               <div class="_11900-south-st-ste-134-cerritos-ca-90703">
//                 ${data.address}
//               </div>
//               ${icon.iconActionCopy}
//             </div>
//           </div>
//         </div>
//       </div>
//       <div class="sidebar  col04">
//         <div id="listings" class="listings"></div>
//       </div>
    
//     `;
//   },
//   afterRender: () => {
//     // Render map in a specific component
//     document.addEventListener("DOMContentLoaded", () => {
//       const mapContainer = document.getElementById("map");
//       if (mapContainer) {
//         mapContainer.innerHTML = mapRadiusComponent.render();
//         mapRadiusComponent.afterRender();
//       }
//     });
//   }
// };

export const titleComponent = {
  render: (data) => {
    return `
      <div class="title stretch col04">
        <div class="primary left">
          <button class="category">
            <span class="span">${data.title}</span>
            ${glyph.glyphActionArrow}
          </button>
        </div>
        <div class="secondary array right">
          <div class="pagination">
            <div class="pagination2">
              <div class="ellipse"></div>
              <div class="ellipse inactive"></div>
              <div class="ellipse inactive"></div>
            </div>
          </div>
          <div class="controls array">
            <button class="controls-button">${icon.iconActionPrev}</button>
            <button class="controls-button">${icon.iconActionNext}</button>
          </div>
        </div>
      </div>
    `;
  }
};

export const cardGalleryItem = {
  render: (data) => {
    let category = {
      category: data.category,
    };
    return `
      <div class="card-category col01">
        <div class="primary">
          ${amtag.amtagCategory.render(category)}

          ${data.partnerLogo ? `
            <div class="badge">
              <img src="${data.partnerLogo}" alt="Partner logo" class="partner-logo-thumbnail" width="15" height="15">
            </div>
          ` : ''}
        </div>
        <div class="tertiary">
          <div class="indicator">
            <div class="indicator-dot"></div>
            <div class="indicator-dot inactive"></div>
            <div class="indicator-dot inactive"></div>
          </div>
        </div>
        <div class="secondary">
          ${data.comment ? `
            <div class="comment">
              ${data.userPicture ? `<img src="${data.userPicture}" alt="User picture" width="15" height="15">` : ''}
              <span class="comment-text">${data.comment}</span>
            </div>
          ` : ''}
        </div>
      </div>
    `;
  }
};